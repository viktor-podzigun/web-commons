<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE ui:UiBinder SYSTEM "http://dl.google.com/gwt/DTD/xhtml.ent">
<ui:UiBinder xmlns:ui='urn:ui:com.google.gwt.uibinder' 
             xmlns:g='urn:import:com.google.gwt.user.client.ui'
             xmlns:c="urn:import:com.googlecode.common.client.ui">
  
  <ui:style>
      .example {
        background-color: #f5f5f5;
      }
  </ui:style>

  <g:HTMLPanel>
  
    <h3>State Button</h3>
    <p>Demonstrates StateButton functionality.</p>
    <div class="bs-docs-example {style.example}">
        <form class="form-inline">
            <c:StateButton ui:field="stateButton" />
            <g:Button ui:field="btnChangeIcon" styleName="btn btn-primary" text="Change Icon" />
            <g:Button ui:field="btnChangeImage" styleName="btn btn-primary" text="Change Image" />
            <g:Button ui:field="btnChangePrimary" styleName="btn btn-primary" text="Change primary" />
            <c:TextField ui:field="label"/>
            <g:Button ui:field="btnChangeText" styleName="btn btn-primary" text="Change Text" />
        </form>
    </div>    
<pre class="prettyprint linenums"><![CDATA[
private static final Binder binder = GWT.create(Binder.class);
interface Binder extends UiBinder<Widget, StateButtonPanelView> {
}
private List<String> icons = new ArrayList<String>();
private List<ImageResource> images = new ArrayList<ImageResource>();

private int     iconIndex;
private int     imageIndex;
private boolean buttonPrimary = true;

@UiField(provided=true) StateButton stateButton;
@UiField TextField label;

public StateButtonPanelView() {
    icons.add("icon-music");
    icons.add("icon-search");
    icons.add("icon-user");
    icons.add("icon-time");
    icons.add("icon-camera");
    icons.add("icon-plus");
    icons.add("icon-eye-open");
    
    images.add(CommonImages.INSTANCE.dialogInfo());
    images.add(CommonImages.INSTANCE.dialogQuestion());
    images.add(CommonImages.INSTANCE.dialogWarning());
    images.add(CommonImages.INSTANCE.dialogError());
    
    stateButton = new StateButton(CommonImages.INSTANCE.dialogError());
    
    initWidget(binder.createAndBindUi(this));
    
}

@UiHandler("btnChangeIcon")
void onChangeIcon(ClickEvent event) {
    stateButton.setGlyphIcon(icons.get(iconIndex));
    iconIndex++;
    
    if (iconIndex >= icons.size()) {
        iconIndex = 0;
    }
}

@UiHandler("btnChangeImage")
void onChangeImage(ClickEvent event) {
    stateButton.setImage(images.get(imageIndex));
    imageIndex++;
    
    if (imageIndex >= images.size()) {
        imageIndex = 0;
    }
}

@UiHandler("btnChangePrimary")
void onChangePrimary(ClickEvent event) {
    stateButton.setPrimary(buttonPrimary);
    buttonPrimary = !buttonPrimary;
}

@UiHandler("btnChangeText")
void onChangeText(ClickEvent event) {
    String newText = label.getText();
    stateButton.setText(newText);
} 
]]></pre>

  </g:HTMLPanel>

</ui:UiBinder>
